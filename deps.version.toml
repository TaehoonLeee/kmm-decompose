[versions]

kotlin = "1.6.0"
androidGradle = "7.0.3"
kotlinxSerialization = "1.2.2"
coroutines = "1.5.2"
koin = "3.1.2"
sqldelight = "1.5.0"
decompose = "0.3.1"
reaktive = "1.1.22"
mviKotlin = "3.0.0-alpha02"
gitliveFirebase = "1.4.3"
googleService = "4.3.10"
gmsAuth = "19.2.0"
ktor = "2.0.0-beta-1"

[libraries]

kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-serialization-plugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradle" }
sqldelight-gradle-plugin = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqldelight" }
decompose-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extension-compose = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decompose" }
reaktive = { module = "com.badoo.reaktive:reaktive", version.ref = "reaktive" }
mviKotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mviKotlin" }
gitliveFirebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "gitliveFirebase" }
google-service-plugin = { module = "com.google.gms:google-services", version.ref = "googleService" }
google-service-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "gmsAuth" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

[bundles]

ktor = [
    "ktor-core",
    "ktor-logging",
    "ktor-serialization",
    "ktor-okHttp"
]